import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Image
from reportlab.lib.styles import getSampleStyleSheet
from datetime import datetime
import streamlit.components.v1 as components
import io

st.set_page_config(page_title="Kru≈ænice s body", layout="centered")

st.title("Kru≈ænice s body")

# --- SIDEBAR s informacemi ---
st.sidebar.header("Informace o aplikaci")
st.sidebar.markdown("""
**Autor aplikace:** Va≈°e jm√©no  
**Kontakt:** vas.email@example.com  

**Pou≈æit√© technologie:**  
- [Streamlit](https://streamlit.io)  
- [NumPy](https://numpy.org)  
- [Matplotlib](https://matplotlib.org)  
- [ReportLab](https://www.reportlab.com) pro export PDF  
""")

# --- Formul√°≈ô pro zad√°n√≠ parametr≈Ø ---
with st.form("circle_form"):
    st.subheader("Parametry kru≈ænice")
    x_center = st.number_input("Sou≈ôadnice st≈ôedu X:", value=0.0)
    y_center = st.number_input("Sou≈ôadnice st≈ôedu Y:", value=0.0)
    radius = st.number_input("Polomƒõr kru≈ænice:", value=10.0, min_value=0.1)
    num_points = st.number_input("Poƒçet bod≈Ø na kru≈ænici:", value=8, min_value=1, step=1)
    color = st.color_picker("Vyber barvu bod≈Ø:", "#ff0000")
    units = st.selectbox("Jednotka:", ["mm", "cm", "m"])

    st.subheader("√ödaje pro PDF")
    user_name = st.text_input("Va≈°e jm√©no:")
    user_email = st.text_input("V√°≈° e-mail:")

    submit = st.form_submit_button("Vykreslit")

if submit:
    # P≈ôevod na milimetry
    if units == "m":
        factor = 1000
    elif units == "cm":
        factor = 10
    else:
        factor = 1

    x_center *= factor
    y_center *= factor
    radius *= factor

    # V√Ωpoƒçet bod≈Ø
    angles = np.linspace(0, 2*np.pi, int(num_points), endpoint=False)
    x_points = x_center + radius * np.cos(angles)
    y_points = y_center + radius * np.sin(angles)

    # Vykreslen√≠
    fig, ax = plt.subplots()
    circle = plt.Circle((x_center, y_center), radius, fill=False, linestyle="--")
    ax.add_artist(circle)
    ax.scatter(x_points, y_points, c=color, s=100)

    ax.set_aspect("equal", adjustable="box")
    ax.set_xlabel("X [mm]")
    ax.set_ylabel("Y [mm]")
    ax.grid(True)

    st.pyplot(fig)

    # --- Export PDF do pamƒõti (s grafem a √∫daji u≈æivatele) ---
    def make_pdf():
        buffer = io.BytesIO()

        # ulo≈æit graf do obr√°zku
        img_buffer = io.BytesIO()
        fig.savefig(img_buffer, format="png", bbox_inches="tight")
        img_buffer.seek(0)

        # ReportLab dokument
        doc = SimpleDocTemplate(buffer)
        styles = getSampleStyleSheet()
        flow = []

        flow.append(Paragraph("<b>V√Ωstup z aplikace Kru≈ænice s body</b>", styles["Title"]))
        flow.append(Spacer(1, 12))

        # Parametry √∫lohy
        flow.append(Paragraph(f"Sou≈ôadnice st≈ôedu: ({x_center} mm, {y_center} mm)", styles["Normal"]))
        flow.append(Paragraph(f"Polomƒõr: {radius} mm", styles["Normal"]))
        flow.append(Paragraph(f"Poƒçet bod≈Ø: {num_points}", styles["Normal"]))
        flow.append(Paragraph(f"Barva bod≈Ø: {color}", styles["Normal"]))
        flow.append(Paragraph(f"Jednotka zadan√° u≈æivatelem: {units}", styles["Normal"]))
        flow.append(Spacer(1, 12))

        # √ödaje u≈æivatele
        flow.append(Paragraph(f"Jm√©no u≈æivatele: {user_name if user_name else 'Neuvedeno'}", styles["Normal"]))
        flow.append(Paragraph(f"E-mail u≈æivatele: {user_email if user_email else 'Neuvedeno'}", styles["Normal"]))
        flow.append(Spacer(1, 12))

        # Autor aplikace
        flow.append(Paragraph("Autor aplikace: Va≈°e jm√©no", styles["Normal"]))
        flow.append(Paragraph("Kontakt: vas.email@example.com", styles["Normal"]))
        flow.append(Spacer(1, 12))

        # Datum generov√°n√≠
        flow.append(Paragraph(f"Vygenerov√°no: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}", styles["Italic"]))
        flow.append(Spacer(1, 24))

        # vlo≈æit obr√°zek grafu
        flow.append(Image(img_buffer, width=400, height=400))

        doc.build(flow)
        buffer.seek(0)
        return buffer

    pdf_buffer = make_pdf()

    # Tlaƒç√≠tka vedle sebe
    col1, col2 = st.columns(2)

    with col1:
        st.download_button(
            label="üìÑ Exportovat do PDF",
            data=pdf_buffer,
            file_name=f"kruznice_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf",
            mime="application/pdf"
        )

    with col2:
        if st.button("üñ®Ô∏è Tisk"):
            components.html(
                """
                <script>
                window.print();
                </script>
                """,
                height=0,
            )
